version: "2.4"

services:
  bot:
    build:
      context: ./bot
      dockerfile: ./Dockerfile
      args:
        ENVIRONMENT: ${ENVIRONMENT}
        SLACK_BOT_ULTRON: ${SLACK_BOT_ULTRON}
        SLACK_CHANNEL_LIST: ${SLACK_CHANNEL_LIST}
        ULTRONEX_BOT_ID: ${ULTRONEX_BOT_ID}
        IRONMAN_USER_ID: ${IRONMAN_USER_ID}
        GIPHY_API_KEY: ${GIPHY_API_KEY}
        NEW_RELIC_APP_NAME: ${NEW_RELIC_APP_NAME}
        NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
        HTTP_SCHEME: ${HTTP_SCHEME}
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
        BASIC_AUTH_REALM: ${BASIC_AUTH_REALM}
        SECRET_WEAPON: ${SECRET_WEAPON}
        HONEYBADGER_API_KEY: ${HONEYBADGER_API_KEY}
        APPSIGNAL_PUSH_API_KEY: ${APPSIGNAL_PUSH_API_KEY}
    container_name: ultronex_bot
    stdin_open: true
    tty: true
    expose:
      - "8443"
    networks:
      network:
        aliases:
          - ultronex_bot
    volumes:
      - ./bot/app:/src/ultronex/app
      - ./bot/log:/src/ultronex/log
      - ./bot/tab:/src/ultronex/tab
    cpu_shares: 306
    mem_reservation: 250m
    mem_limit: 350m
    restart: always

  haproxy:
    build:
      context: ./haproxy
      dockerfile: ./Dockerfile
      args:
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
        BASIC_AUTH_REALM: ${BASIC_AUTH_REALM}
        HAPROXY_HTTP_SCHEME: ${HAPROXY_HTTP_SCHEME}
        HAPROXY_STATS_URI: ${HAPROXY_STATS_URI}
        HAPROXY_STATS_REFRESH: ${HAPROXY_STATS_REFRESH}
    container_name: ultronex_haproxy
    networks:
      network:
        aliases:
          - ultronex_haproxy
    expose:
      - "18081"
    ports:
      - "80:80"
      - "443:443"
      - "18443:18443"
      - "18888:18888"
      - "8040:8040"
      - "13000:13000"
    volumes:
      - /etc/letsencrypt/live/ultronx.mooo.com:/etc/letsencrypt/live/ultronx.mooo.com
      - /etc/letsencrypt/live/ultronex.mooo.com/haproxy.pem:/etc/ssl/cert/haproxy.pem
      - /.well-known/acme-challenge:/.well-known/acme-challenge
    links:
      - bot
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m
    restart: always

  scope:
    build:
      context: ./scope
      dockerfile: ./Dockerfile
      args:
        ENABLE_BASIC_AUTH: ${ENABLE_BASIC_AUTH}
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
    container_name: ultronex_scope
    networks:
      network:
        aliases:
          - ultronex_scope
    expose:
      - 4040
    pid: "host"
    privileged: true
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"
      - "--weave=false"
    cpu_shares: 104
    mem_reservation: 150m
    mem_limit: 200m
    restart: always

  loki:
    image: grafana/loki:latest
    container_name: ultronex_loki
    expose:
      - "3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      network:
        aliases:
          - ultronex_loki
    cpu_shares: 104
    mem_reservation: 150m
    mem_limit: 200m
    
  promtail:
    image: grafana/promtail:latest
    container_name: ultronex_promtail
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      network:
        aliases:
          - ultronex_promtail
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m
    restart: always

  grafana:
    build:
      context: ./grafana
      dockerfile: ./Dockerfile
      args:
        GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    container_name: ultronex_grafana
    volumes:
      - "grafana_data:/var/lib/grafana:rw"
    expose:
      - "3000"
    networks:
      network:
        aliases:
          - ultronex_grafana
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m
    restart: always
          
  prometheus:
    build:
      context: ./prometheus
      dockerfile: ./Dockerfile
    volumes:
      - "prometheus_data:/var/lib/prometheus:rw"
    expose:
    - "9090"
    networks:
      network:
        aliases:
          - ultronex_prometheus
    cpu_shares: 104
    mem_reservation: 50m
    mem_limit: 75m
    restart: always

networks:
  network:
    driver: bridge

volumes:
  grafana_data:
  prometheus_data:
